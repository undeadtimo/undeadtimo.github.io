---
layout: post
title:  "추천 알고리즘 정리 [쇼핑몰 프로젝트]"
date:   2024-06-09 22:00:00 +0900
categories: recommend update
---

## 추천 알고리즘

<span style="color: gray; font-size: 10px">쇼핑몰 프로젝트에 사용하기 위해 찾은 내용을 정리하였다</span>


추천 알고리즘에는 **Content Based Filtering(콘텐츠 기반 필터링)**과 **Collaborative Filtering(협업 필터링)**이 존재한다.

![alt](https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdJEzTS%2Fbtrp96bndoU%2FPRjKhEf1k1FJdHwmpGp0HK%2Fimg.png)

출처 : Designing of Recommendation Engine for Recyclalbe Waste Mobile App

---

<br>

**콘텐츠 기반 필터링**은 *A* 라는 상품을 사용자가 구매한 경우, *A* 상품과 유사한 특성을 갖는 상품들을 사용자에게 추천해준다.

예를 들면, 사용자가 장거리 달리기에 적합한 런닝화를 구매한 경우, 장거리 달리기에 특화된 런닝화들이 추천목록에 올라오는 것이다.

<span>

![alt](https://img.gqkorea.co.kr/gq/2023/03/style_6414b4e977553.jpg)
![alt](https://img.gqkorea.co.kr/gq/2023/03/style_6414b4e7b372c.jpg)

</span>


<br>

**협업 필터링**은 *유사한 사용자* 를 찾는 것에서 출발하는 알고리즘이다.

이 **협업 필터링**은 또한 **사용자 기반 필터링**과 **아이템 기반 필터링**으로 구분 지을 수 있다.

<br>

**협업 필터링**의 종류인 **사용자 기반 필터링**은 *비슷한 성향*의 사용자들을 찾아서 해당 사용자들이 구매한 물건들을 추천해준다.

예를 들면, 어떠한 물건에 대해 다른 사용자도 *같은 평점*을 남겼을 경우, *비슷한 성향*이라 판단하여 비슷한 성향의 사용자가 구매한 물건을 추천해주는 것이다.

![alt](https://velog.velcdn.com/images/sagesrkim/post/11271216-fc97-4eed-aef5-b3b4e1b42073/image.png)

<br>

### 아이템 기반 필터링

**협업 필터링**의 또 다른 종류인 **아이템 기반 필터링**은 *같은 물건을 구매한* 사용자들을 찾아서 해당 사용자들이 구매한 물건들을 추천해준다.

예를 들면, a 라는 물건을 구매했을 때, a 물품을 구매한 다른 사용자들이 b 물품도 구매했다면, b 물건을 추천해주는 것이다.


---


## 프로젝트에 어떤 알고리즘을 적용할 것인가?

나는 프로젝트에 적용할 추천 알고리즘을 고르기 위해 다음과 같은 조건들을 고려하였다.

1. 현재 기술 상태를 고려하여, 단 시간 내에 적용할 수 있을 것.

2. 상품 상세 페이지 및 메인 페이지에서 적용할 수 있어야 하며, 사용자의 소비를 촉진할 수 있어야 할 것.

3. 대규모 사용자를 고려하여 성능이 더 좋은 알고리즘을 적용할 것.

<br>

## Consider

+ 현재 기술 상태와 데드라인 고려 : 
  + 머신러닝에 대한 기반지식이 없기 때문에 난해한 ai 이론 및 수학 이론이 필요한 라이브러리를 사용하려면 많은 학습 시간이 소모된다. 따라서, 특별한 라이브러리를 사용하지 않고도 순수한 java 코드로 구현이 가능한 알고리즘을 선택해야 한다.

+ 상세 페이지 및 메인 페이지 고려 :
  + 상품 상세 페이지 및 메인 페이지 모두, 사용자의 이전 구매 기록 또는 현재 보고 있는 상품에 기반하여 물건을 추천해주는 알고리즘으로 사용자의 소비를 촉진할 수 있을 것이라 판단하였다.
  + 다른 쇼핑몰 사이트를 참고하여도, 사용자의 이전 구매 기록과 현재 보고 있는 상품과 비슷한 물건들을 추천하고 있는 곳이 많았다.
  + ex. 쿠팡, 무신사 etc

+ 대규모 사용자에 대한 고려 :
  + 대규모 사용자가 존재하고 있기 때문에, 여러 사용자의 정보를 기반으로 하는 알고리즘 보다는 상대적으로 크게 숫자가 적은 상품에 대한 정보를 기반으로 하는 알고리즘이 보다 더 좋은 성능을 기대할 수 있다.

## Answer

### 콘텐츠 기반 필터링

+ 협업 필터링과 반대로 머신러닝에 대한 지식 없이도 구현할 수 있으며,
+ 사용자의 이전 구매 기록과 현재 보고 있는 상품과 비슷한 물건을 추천하기에 적합한 알고리즘이다.
+ 또한, 대규모 사용자가 있다고 가정하였을 때 상품에 대한 데이터를 기반으로 다른 상품을 추천해주기 때문에 더 좋은 성능을 구현할 수 있다.

추천 알고리즘을 구현하며 수학적 계산이 필요할 때는 Apach Commons Math 라이브러리를 사용할 것이며,
추가적으로 ElasticSearch를 이용하여 추천 알고리즘의 다각화를 노려볼 계획이다.

---

## 구체적 구현 방법

대부분의 프로젝트에서는 java에서 머신러닝과 관련된 기능을 구현할 수 있도록 도와주는 라이브러리인 mahout을 사용하고 있었다.

하지만 mahout 라이브러리를 사용하기 위해서는 머신러닝에 대한 학습이 필요하였기에, mahout을 사용하지 않고 추천 알고리즘을 구현하는 방법을 찾는데 많은 시간을 소모했다.

<a href="https://github.com/Lee-sungheon/NETCHA">NETCHA</a>

다행히 위 링크에서 여타 다른 라이브러리를 사용하지 않고 추천 알고리즘을 구현한 것을 발견하였고, 해당 프로젝트에서 콘텐츠 기반 필터링을 구현한 부분을 분석하였다.

1. 콘텐츠의 특성을 대상으로 임의의 '가중치' 값을 부여한다.
  + 해당 프로젝트는 '영화'에 대해서 다루고 있는데, 영화의 감독, 장르, 키워드 등등의 특성에 100, 50, 10 처럼 임의의 '가중치' 값을 부여하고 있었다.

2. 사용자가 시청한 영화를 비교 대상으로 놓고, 모든 영화 목록을 가져와서, 각 영화별로 시청한 영화와 특성이 일치하는 만큼 특성에 부여된 가중치를 합산한다.
  + ex. 만약 사용자가 a 영화를 봤을 때, 다른 모든 영화 목록을 가져온다. 그리고 모든 영화에 대해 탐색하면서 a 영화와 비교하게 되는 것이다.
    + 영화 목록에서 b 영화를 가져왔을 때, a 영화와 b 영화의 장르가 같다면 50점을 추가해주고, 두 영화의 감독이 같다면 100점을 추가해주는 방식으로 영화별로 점수를 계산해주는 것이다.

3. 각 영화별로 합산된 점수를 기준으로 내림차순 정렬을 진행한다. 이후, 필요한만큼 가중치가 높은 영화부터 가져와 추천 목록에 표시한다.


---

## 내 프로젝트에 적용

위의 추천 알고리즘 구현 방식을 쇼핑몰에서는 어떻게 구현할 수 있을까?

프로젝트에서 제작하는 쇼핑몰은 신발을 다루고 있기 때문에, 신발의 여러 특성에 대해 어떤 가중치를 부여할지 먼저 결정해야 한다.

신발의 목적에 따른 가중치, 신발의 회사에 따른 가중치, 신발을 생산하는 나라에 따른 가중치, 신발의 색깔에 따른 가중치 등등.

특성별로 사용자의 기호가 일정하게 나타나는 것들이 있을 것이다. 그러한 특성에 높은 가중치를 부여하여,

추천 목록에 표시를 할 것이다.